@page "/register"
@inject HttpClient httpClient
@inject IJSRuntime js
@inject NavigationManager navManager

<PageTitle>Register</PageTitle>

<div style="max-width: 300px; margin: auto">
    <main class="form-signin w-100 m-auto">
        @if (formInputCode)
        {
            <h1 class="h3 mb-3 fw-normal">Please input code from email</h1>
            <div class="form-floating">
                <input @bind="enteredCode" type="number" class="form-control" id="code" placeholder="123456" required>
                <label for="code">Code</label>
                <div class="valid-feedback">Все хорошо!</div>
                <div class="invalid-feedback">Пожалуйста, предоставьте действующий почтовый индекс.</div>
            </div>
            <br />
            <button @onclick="Registration" class="btn btn-primary w-100 py-2" type="submit">Submit</button>
        } 
        else
        {
            <h1 class="h3 mb-3 fw-normal">Please join</h1>
            <div class="form-floating">
                <input @bind="loginRequest.Email" type="email" class="input-validation-error form-control" id="floatingInput" placeholder="name@example.com" required>
                <label for="floatingInput">Email address</label>
                <div class="valid-feedback">Все хорошо!</div>
                <div class="invalid-feedback">Пожалуйста, предоставьте действующий почтовый индекс.</div>
            </div>
            <div class="form-floating">
                <input @bind="loginRequest.Password" type="password" class="input-validation-error form-control" id="floatingPassword" placeholder="Password" required>
                <label for="floatingPassword">Password</label>
                <div class="valid-feedback">Все хорошо!</div>
                <div class="invalid-feedback">Пожалуйста, предоставьте действующий почтовый индекс.</div>
            </div>
            <button @onclick="SendCodeToConfirmMail" class="btn btn-primary w-100 py-2" type="submit">Join</button>
            <p class="mt-5 mb-3 text-body-secondary">&copy; 2023</p>
        } 
    </main>
</div>

@code {
    private AuthenticationRequest loginRequest = new();
    private bool formInputCode = false;
    private int enteredCode;

    private async Task SendCodeToConfirmMail()
    {
        loginRequest.EmailConfirmationCode = new Random().Next(100000, 999999);
        var emailVerify = await httpClient.PostAsJsonAsync<AuthenticationRequest>("/api/Account/VerifyEmail", loginRequest);
        if (emailVerify.IsSuccessStatusCode)
        {
            formInputCode = true;
        }
        else
        {
            await js.InvokeVoidAsync("alert", "NOT email verify");
        }
    }

    private async Task Registration()
    {
        if (enteredCode == loginRequest.EmailConfirmationCode)
        {
            var registerResponse = await httpClient.PostAsJsonAsync<AuthenticationRequest>("/api/Account/Register", loginRequest);
            if (registerResponse.IsSuccessStatusCode)
            {
                await js.InvokeVoidAsync("alert", "success");
                navManager.NavigateTo("/", true);
            }
            else if (registerResponse.StatusCode == HttpStatusCode.Unauthorized)
            {
                await js.InvokeVoidAsync("alert", "NOT success");
                return;

            }
        }
    }
}