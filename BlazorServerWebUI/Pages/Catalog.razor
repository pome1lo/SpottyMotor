@page "/catalog"
@using BlazorServerWebUI.Models.ViewModels;
@using System.Net.Http.Headers;
@inject HttpClient httpClient
@inject NavigationManager navManager
@inject AuthenticationStateProvider authenticationStateProvider
<PageTitle>Catalog</PageTitle>


<div>
    <h1>Cars</h1>
    @if (allCars != null && allCars.Count != 0)
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
            @foreach (var car in allCars)
            {
                <CatalogItem Car="car"></CatalogItem>
            }
        </div>
    }
    else
    {
       <h4 class="text-center" colspan="5">No cars to display</h4>
    }
</div>

@code {
    private List<CarViewModel> allCars = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await FetchCarList();
    }

    private async Task FetchCarList()
    {
        try
        {
            allCars = await httpClient.GetFromJsonAsync<List<CarViewModel>>("api/Car");

        }
        catch (Exception ex)
        {
            
            Console.WriteLine(ex.Message);
        }
    }

    //private async Task FetchCarList()
    //{
    //    try
    //    {
    //        var customAuthStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;
    //        var token = await customAuthStateProvider.GetToken();
    //        if (!string.IsNullOrWhiteSpace(token))
    //        {
    //            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
    //            allCars = await httpClient.GetFromJsonAsync<List<CarViewModel>>("api/Car");
    //        }
    //        else
    //        {
    //            navManager.NavigateTo("/login");
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        Console.WriteLine(ex.Message );
    //    }
    //}
}